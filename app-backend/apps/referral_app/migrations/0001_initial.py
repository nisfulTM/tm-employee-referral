# Generated by Django 5.2.4 on 2025-07-22 17:31

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Department Name')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='Email')),
                ('username', models.CharField(blank=True, max_length=250, null=True, verbose_name='User Name')),
                ('type', models.CharField(choices=[('employee', 'Employee'), ('hr', 'HR')], default='employee', max_length=20)),
                ('emp_code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Employee Code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=20, null=True, verbose_name='Full Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='LinkedIn URL')),
                ('department', models.CharField(blank=True, max_length=20, null=True, verbose_name='Department')),
                ('role', models.CharField(blank=True, max_length=20, null=True, verbose_name='Role')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/', verbose_name='Resume')),
                ('status', models.CharField(choices=[('received', 'Received'), ('shortlisted', 'Shortlisted'), ('onhold', 'On-hold'), ('hired', 'Hired'), ('rejected', 'Rejected')], default='received', max_length=50, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('referred_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals_made', to=settings.AUTH_USER_MODEL, verbose_name='Referred By')),
            ],
            options={
                'verbose_name': 'Referral',
                'verbose_name_plural': 'Referrals',
            },
        ),
        migrations.CreateModel(
            name='ReferralStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(blank=True, max_length=20, null=True, verbose_name='Notes')),
                ('old_status', models.CharField(max_length=50, verbose_name='Old Status')),
                ('new_status', models.CharField(max_length=50, verbose_name='New Status')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Updated At')),
                ('referral', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_logs', to='referral_app.referral', verbose_name='Referral')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Referral Status Log',
                'verbose_name_plural': 'Referral Status Logs',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Role Name')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='referral_app.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refresh_token', models.TextField(max_length=255, verbose_name='Refresh Token')),
                ('access_token', models.TextField(max_length=255, verbose_name='Access Token')),
                ('created_at', models.DateTimeField(auto_now_add=True, max_length=255, verbose_name='Created At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_tokens',
            },
        ),
    ]
